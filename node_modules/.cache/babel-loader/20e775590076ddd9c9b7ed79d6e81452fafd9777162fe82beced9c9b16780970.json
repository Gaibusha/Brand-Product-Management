{"ast":null,"code":"import React,{useState}from'react';import'./ChatBot.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatBot=()=>{const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const sendMessage=async event=>{event.preventDefault();if(input.trim()==='')return;const userMessage={text:input,user:true};setMessages(prevMessages=>[...prevMessages,userMessage]);try{const response=await fetch('/dialogflow',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({query:input})});const data=await response.json();const botMessage={text:data.response,user:false};setMessages(prevMessages=>[...prevMessages,botMessage]);}catch(error){console.error('Failed to send message:',error);const errorMessage={text:'Failed to get a response from the server.',user:false};setMessages(prevMessages=>[...prevMessages,errorMessage]);}setInput('');};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/chatbot.png\",alt:\"Chat Bot Icon\",className:\"chatbot-icon\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Chat Bot\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-window\",children:messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{className:`message ${msg.user?'user':'bot'}`,children:msg.text},index))}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:sendMessage,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Type a message...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})]})]});};export default ChatBot;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ChatBot","messages","setMessages","input","setInput","sendMessage","event","preventDefault","trim","userMessage","text","user","prevMessages","response","fetch","method","headers","body","JSON","stringify","query","data","json","botMessage","error","console","errorMessage","className","children","src","alt","map","msg","index","onSubmit","type","value","onChange","e","target","placeholder"],"sources":["C:/brand-product-management/src/components/ChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ChatBot.css';\r\n\r\nconst ChatBot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const sendMessage = async (event) => {\r\n    event.preventDefault();\r\n    if (input.trim() === '') return;\r\n\r\n    const userMessage = { text: input, user: true };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n    try {\r\n      const response = await fetch('/dialogflow', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ query: input }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botMessage = { text: data.response, user: false };\r\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n    } catch (error) {\r\n      console.error('Failed to send message:', error);\r\n      const errorMessage = { text: 'Failed to get a response from the server.', user: false };\r\n      setMessages((prevMessages) => [...prevMessages, errorMessage]);\r\n    }\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"chatbot-header\">\r\n        <img src=\"/chatbot.png\" alt=\"Chat Bot Icon\" className=\"chatbot-icon\" />\r\n        <h1>Chat Bot</h1>\r\n      </div>\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.user ? 'user' : 'bot'}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={sendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}